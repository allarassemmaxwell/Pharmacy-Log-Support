# Generated by Django 4.1.5 on 2023-01-28 15:32

import dashboard_app.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=255, verbose_name="Nome")),
                ("last_name", models.CharField(max_length=255, verbose_name="Prenom")),
                (
                    "email",
                    models.EmailField(
                        max_length=200,
                        unique=True,
                        validators=[django.core.validators.EmailValidator()],
                        verbose_name="Email",
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "i_agree",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Terms and conditions",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[("User", "User")],
                        max_length=100,
                        null=True,
                        verbose_name="Role",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", dashboard_app.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=255, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=255, verbose_name="Last Name"),
                ),
                ("email", models.EmailField(max_length=255, verbose_name="Email")),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Numéro de téléphone",
                    ),
                ),
                (
                    "subject",
                    models.CharField(max_length=255, unique=True, verbose_name="Sujet"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("Masculin", "Masculin"), ("Feminin", "Feminin")],
                        max_length=100,
                        verbose_name="Options",
                    ),
                ),
                ("age", models.IntegerField(verbose_name="Age")),
                (
                    "hour",
                    models.DateTimeField(auto_now_add=True, verbose_name="Horaire Rv"),
                ),
                ("date", models.DateField(verbose_name="Date de RV")),
                ("description", models.TextField(verbose_name="Description")),
                ("active", models.BooleanField(default=True, verbose_name="Est actif")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
            ],
            options={
                "ordering": ("-timestamp",),
            },
        ),
        migrations.CreateModel(
            name="AppointmentSymptom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, unique=True, verbose_name="Nom"),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Est actif")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
            ],
            options={
                "ordering": ("-timestamp",),
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, unique=True, verbose_name="Nom"),
                ),
                (
                    "unity_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Prix Unitaire",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        blank=True, default=1, null=True, verbose_name="Quantité"
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Reduction"
                    ),
                ),
                (
                    "brand_name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Nom Commercial"
                    ),
                ),
                (
                    "genetic_name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Nom Générique"
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                ("active", models.BooleanField(default=True, verbose_name="Est actif")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        editable=False,
                        max_length=255,
                        null=True,
                        verbose_name="Slug",
                    ),
                ),
            ],
            options={
                "ordering": ("-timestamp",),
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, unique=True, verbose_name="Nom"),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Est actif")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        editable=False,
                        max_length=255,
                        null=True,
                        verbose_name="Slug",
                    ),
                ),
            ],
            options={
                "ordering": ("-timestamp",),
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="Product/%Y/%m/%d/", verbose_name="Fichier(pdf,image)"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, unique=True, verbose_name="Nom"),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Est actif")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
            ],
            options={
                "ordering": ("-timestamp",),
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, unique=True, verbose_name="Nom"),
                ),
                ("email", models.EmailField(max_length=255, verbose_name="Email")),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Numéro de téléphone",
                    ),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True, max_length=255, null=True, verbose_name="Pays"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Ville"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Adresse"
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, max_length=255, null=True, verbose_name="Site Web"
                    ),
                ),
                (
                    "facebook_link",
                    models.URLField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Lien Facebook",
                    ),
                ),
                (
                    "twitter_link",
                    models.URLField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Lien Twitter",
                    ),
                ),
                (
                    "instagram_link",
                    models.URLField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Lien  Instagram",
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Est actif")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="provider_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        blank=True, default=1, null=True, verbose_name="Quantité"
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2, max_digits=7, verbose_name="Total(cfa)"
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                ("active", models.BooleanField(default=True, verbose_name="Est actif")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="supplier",
                        to="dashboard_app.supplier",
                    ),
                ),
            ],
            options={
                "ordering": ("-timestamp",),
            },
        ),
        migrations.CreateModel(
            name="Sale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Reference"
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Quantité"
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Total"
                    ),
                ),
                (
                    "recu",
                    models.FileField(
                        upload_to="Recu/%Y/%m/%d/", verbose_name="Fichier(pdf,image)"
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Est actif")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="product",
                        to="dashboard_app.product",
                    ),
                ),
            ],
            options={
                "ordering": ("-timestamp",),
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="Images/%Y/%m/",
                        verbose_name="Photo",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Numéro de téléphone",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de Naissance"
                    ),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True, max_length=255, null=True, verbose_name="Pays"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Ville"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Adresse"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("Masculin", "Masculin"), ("Feminin", "Feminin")],
                        max_length=100,
                        null=True,
                        verbose_name="Options",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Pays"
                    ),
                ),
                (
                    "facebook",
                    models.URLField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Facebook Link",
                    ),
                ),
                (
                    "instagram",
                    models.URLField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Instagram Link",
                    ),
                ),
                (
                    "twitter",
                    models.URLField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Twitter Link",
                    ),
                ),
                (
                    "linked_in",
                    models.URLField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Linked In Link",
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Est actif")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-timestamp",),
            },
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="product_Image",
                to="dashboard_app.productcategory",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="product_category",
                to="dashboard_app.productimage",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="stock",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="stock",
                to="dashboard_app.stock",
            ),
        ),
        migrations.CreateModel(
            name="AppointmentPrescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "product_name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Nom du Produit"
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Quantité"
                    ),
                ),
                (
                    "heart_rate",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Pression Cardiac"
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Poids"
                    ),
                ),
                (
                    "blood_rate",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Taux Sanguin"
                    ),
                ),
                (
                    "body_temperature",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        verbose_name="Temperature Corporelle",
                    ),
                ),
                (
                    "glucose_level",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Taux de Glucose"
                    ),
                ),
                (
                    "blood_pressure",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        verbose_name="Pression Sanguine",
                    ),
                ),
                ("day", models.DateField(verbose_name="Jour de RV")),
                (
                    "appointment_symptom",
                    models.TextField(verbose_name="Symptome Patient"),
                ),
                (
                    "morning_times",
                    models.BooleanField(default=False, verbose_name="Matin"),
                ),
                (
                    "afternoon_times",
                    models.BooleanField(default=False, verbose_name="Apres Midi"),
                ),
                (
                    "evening_times",
                    models.BooleanField(default=True, verbose_name="Soir"),
                ),
                ("night_times", models.BooleanField(default=True, verbose_name="Nuit")),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Prix"
                    ),
                ),
                (
                    "by",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Nom du Pharmacien(e)"
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Est actif")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="product",
                        to="dashboard_app.appointment",
                    ),
                ),
            ],
            options={
                "ordering": ("-timestamp",),
            },
        ),
    ]
